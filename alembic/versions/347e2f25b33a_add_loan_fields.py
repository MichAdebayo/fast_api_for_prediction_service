"""add loan fields

Revision ID: 347e2f25b33a
Revises: 8d9e812d01c3
Create Date: 2025-02-21 10:32:39.996446

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
#______________________________________________________________________________
#
# Ã  ajouter avant de faire alembic upgrade head
#______________________________________________________________________________
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '347e2f25b33a'
down_revision: Union[str, None] = '8d9e812d01c3'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('loan_requests', sa.Column('state', sqlmodel.sql.sqltypes.AutoString(), nullable=False))
    op.add_column('loan_requests', sa.Column('bank', sqlmodel.sql.sqltypes.AutoString(), nullable=False))
    op.add_column('loan_requests', sa.Column('naics', sa.Integer(), nullable=False))
    op.add_column('loan_requests', sa.Column('term', sa.Integer(), nullable=False))
    op.add_column('loan_requests', sa.Column('no_emp', sa.Integer(), nullable=False))
    op.add_column('loan_requests', sa.Column('new_exist', sa.Boolean(), nullable=False))
    op.add_column('loan_requests', sa.Column('create_job', sa.Integer(), nullable=False))
    op.add_column('loan_requests', sa.Column('retained_job', sa.Integer(), nullable=False))
    op.add_column('loan_requests', sa.Column('urban_rural', sa.Integer(), nullable=False))
    op.add_column('loan_requests', sa.Column('rev_line_cr', sa.Boolean(), nullable=False))
    op.add_column('loan_requests', sa.Column('low_doc', sa.Boolean(), nullable=False))
    op.add_column('loan_requests', sa.Column('gr_appv', sa.Integer(), nullable=False))
    op.add_column('loan_requests', sa.Column('recession', sa.Boolean(), nullable=False))
    op.add_column('loan_requests', sa.Column('has_franchise', sa.Boolean(), nullable=False))
    op.add_column('loan_requests', sa.Column('mis_status', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.drop_column('loan_requests', 'status')
    op.drop_column('loan_requests', 'amount')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('loan_requests', sa.Column('amount', sa.FLOAT(), nullable=False))
    op.add_column('loan_requests', sa.Column('status', sa.VARCHAR(), nullable=False))
    op.drop_column('loan_requests', 'mis_status')
    op.drop_column('loan_requests', 'has_franchise')
    op.drop_column('loan_requests', 'recession')
    op.drop_column('loan_requests', 'gr_appv')
    op.drop_column('loan_requests', 'low_doc')
    op.drop_column('loan_requests', 'rev_line_cr')
    op.drop_column('loan_requests', 'urban_rural')
    op.drop_column('loan_requests', 'retained_job')
    op.drop_column('loan_requests', 'create_job')
    op.drop_column('loan_requests', 'new_exist')
    op.drop_column('loan_requests', 'no_emp')
    op.drop_column('loan_requests', 'term')
    op.drop_column('loan_requests', 'naics')
    op.drop_column('loan_requests', 'bank')
    op.drop_column('loan_requests', 'state')
    # ### end Alembic commands ###
